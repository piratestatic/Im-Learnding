<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_TEKaUMQWEeu_qNejKhSD1w" name="CMSC350">
    <eAnnotations xmi:id="_TI8zsMQWEeu_qNejKhSD1w" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_TI8zscQWEeu_qNejKhSD1w" source="codegen">
        <details xmi:id="_TI8zssQWEeu_qNejKhSD1w" key="codegenDirectory" value="/CMSC350/src"/>
        <details xmi:id="_TRBxoMQWEeu_qNejKhSD1w" key="AssociatedSourceCode" value="/CMSC350/src/Converter.java;708501859/1;/CMSC350/src/GUIConverter.java;1562267360/1;/CMSC350/src/StackFull.java;4287185099/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_TOFyYMQWEeu_qNejKhSD1w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_TOFyYcQWEeu_qNejKhSD1w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_TOFyYsQWEeu_qNejKhSD1w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_TOFyY8QWEeu_qNejKhSD1w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_TOGZcMQWEeu_qNejKhSD1w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_TOGZccQWEeu_qNejKhSD1w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_TOGZcsQWEeu_qNejKhSD1w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_TOGZc8QWEeu_qNejKhSD1w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_TOGZdMQWEeu_qNejKhSD1w">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_TN_rwMQWEeu_qNejKhSD1w" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_TOAS0MQWEeu_qNejKhSD1w" name="util"/>
      <packagedElement xmi:type="uml:Package" xmi:id="_TOBg8sQWEeu_qNejKhSD1w" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_TOBg88QWEeu_qNejKhSD1w" name="event"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_TOpzEMQWEeu_qNejKhSD1w" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_TOpzEcQWEeu_qNejKhSD1w" name="Exception"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_TOxH0MQWEeu_qNejKhSD1w" name="RuntimeException"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_TOBg8MQWEeu_qNejKhSD1w" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_TOBg8cQWEeu_qNejKhSD1w" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_TOs2YMQWEeu_qNejKhSD1w" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_TOtdccQWEeu_qNejKhSD1w" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_TOuEgcQWEeu_qNejKhSD1w" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_TOvSoMQWEeu_qNejKhSD1w" name="JComponent"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_TOFLUMQWEeu_qNejKhSD1w" name="Converter">
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TO0yMMQWEeu_qNejKhSD1w" name="isOperator" specification="_TOGZdcQWEeu_qNejKhSD1w">
        <ownedParameter xmi:id="_TO0yMcQWEeu_qNejKhSD1w" name="s">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_TO0yMsQWEeu_qNejKhSD1w" direction="return">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
        <language>java</language>
        <body>switch (s) {&#xD;
		case (&quot;+&quot;):&#xD;
		case (&quot;-&quot;):&#xD;
		case (&quot;*&quot;):&#xD;
		case (&quot;/&quot;):&#xD;
			return true;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TO1ZQMQWEeu_qNejKhSD1w" name="prefixToPostfix" specification="_TOHAgcQWEeu_qNejKhSD1w">
        <ownedParameter xmi:id="_TO1ZQcQWEeu_qNejKhSD1w" name="expression">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_TO1ZQsQWEeu_qNejKhSD1w" direction="return">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <language>java</language>
        <body>var revStack = new Stack&lt;String>();&#xD;
		var operStack = new Stack&lt;String>();&#xD;
		//tokenize the string containing the prefix expression&#xD;
		String[] token; &#xD;
		&#xD;
		if(expression.contains(&quot; &quot;)) {&#xD;
			token = expression.split(&quot; &quot;);&#xD;
		}else {&#xD;
			token = expression.split(&quot;&quot;);&#xD;
		}&#xD;
		&#xD;
		for(int i = 0; i&lt;token.length;i++) {&#xD;
			revStack.push(token[i]);&#xD;
		}&#xD;
		&#xD;
		//while the reversal stack is not empty&#xD;
		while(!revStack.isEmpty()) {&#xD;
			//if it is an operand push it onto the operand stack&#xD;
			//if(!isOperator(operStack.peek())){&#xD;
			if(!isOperator(revStack.peek())){&#xD;
				//pop the next token from the reversal stack&#xD;
				operStack.push(revStack.pop());&#xD;
			//else it is an operator	&#xD;
			}else {&#xD;
				//pop two operands off of the operand stack&#xD;
				String operand1 = operStack.pop();&#xD;
				String operand2 = operStack.pop();&#xD;
				String operator = revStack.pop();&#xD;
				//create a string with the two operands followed the operator&#xD;
				String temp = operand1 + &quot; &quot; + operand2 + &quot; &quot; + operator;&#xD;
				//push that string onto the operand stack&#xD;
				operStack.push(temp);&#xD;
			}&#xD;
		}&#xD;
		//pop the postfix expression off the stack&#xD;
		String convertedExpression = operStack.pop();&#xD;
		if(!operStack.isEmpty()) {&#xD;
			throw new StackFull();&#xD;
		}&#xD;
		return convertedExpression;&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TO1ZQ8QWEeu_qNejKhSD1w" name="postfixToPrefix" specification="_TOHnkcQWEeu_qNejKhSD1w">
        <ownedParameter xmi:id="_TO1ZRMQWEeu_qNejKhSD1w" name="expression">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_TO1ZRcQWEeu_qNejKhSD1w" direction="return">
          <name xsi:nil="true"/>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <language>java</language>
        <body>var revStack = new Stack&lt;String>();&#xD;
		var operStack = new Stack&lt;String>();&#xD;
		//tokenize the string containing the postfix expression&#xD;
		String [] token;&#xD;
		&#xD;
		//if it is a space&#xD;
		if (expression.contains(&quot; &quot;)) {&#xD;
			token = expression.split(&quot; &quot;);&#xD;
		}else {&#xD;
			token = expression.split(&quot;&quot;);&#xD;
		}&#xD;
		&#xD;
		while(!revStack.isEmpty()) {&#xD;
			operStack.push(revStack.pop());&#xD;
		}&#xD;
		for (int i= token.length-1;i>=0;i--) {&#xD;
			operStack.push(token[i]);&#xD;
		}&#xD;
		while(!operStack.isEmpty()) {&#xD;
			if(!isOperator(operStack.peek())) {&#xD;
				revStack.push(operStack.pop());&#xD;
			}else {&#xD;
				String operand2 = revStack.pop();&#xD;
				String operand1 = revStack.pop();&#xD;
				String operator = operStack.pop();&#xD;
				String temp = operator+&quot; &quot;+operand1+&quot; &quot;+operand2;&#xD;
				revStack.push(temp);&#xD;
			}&#xD;
		}&#xD;
		String convertedString = revStack.pop();&#xD;
		&#xD;
		if(!revStack.isEmpty()) {&#xD;
			throw new StackFull();&#xD;
		}&#xD;
		return convertedString;&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_TOGZdcQWEeu_qNejKhSD1w" name="isOperator" visibility="package" isStatic="true" method="_TO0yMMQWEeu_qNejKhSD1w">
        <ownedParameter xmi:id="_TOGZdsQWEeu_qNejKhSD1w" name="s">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_TOHAgMQWEeu_qNejKhSD1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_TOHAgcQWEeu_qNejKhSD1w" name="prefixToPostfix" method="_TO1ZQMQWEeu_qNejKhSD1w" raisedException="_TOpzEcQWEeu_qNejKhSD1w">
        <ownedParameter xmi:id="_TOHAgsQWEeu_qNejKhSD1w" name="expression">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_TOHnkMQWEeu_qNejKhSD1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_TOHnkcQWEeu_qNejKhSD1w" name="postfixToPrefix" method="_TO1ZQ8QWEeu_qNejKhSD1w">
        <ownedParameter xmi:id="_TOHnksQWEeu_qNejKhSD1w" name="expression">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="_TOHnk8QWEeu_qNejKhSD1w" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_TOIOoMQWEeu_qNejKhSD1w" name="GUIConverter">
      <generalization xmi:id="_TOwgwMQWEeu_qNejKhSD1w" general="_TOs2YMQWEeu_qNejKhSD1w"/>
      <ownedAttribute xmi:id="_TOxu4cQWEeu_qNejKhSD1w" name="userInput" visibility="private" type="_TOtdccQWEeu_qNejKhSD1w" association="_TO4ckMQWEeu_qNejKhSD1w">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_TOyV8MQWEeu_qNejKhSD1w" value="new JTextField(&quot;&quot;, 20)"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_TOy9AcQWEeu_qNejKhSD1w" name="prefix" visibility="private" isLeaf="true" type="_TOuEgcQWEeu_qNejKhSD1w" isReadOnly="true" association="_TO5DocQWEeu_qNejKhSD1w">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_TOzkEMQWEeu_qNejKhSD1w" value="new JButton(&quot;Prefix to Postfix&quot;)"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_TOzkEsQWEeu_qNejKhSD1w" name="postfix" visibility="private" isLeaf="true" type="_TOuEgcQWEeu_qNejKhSD1w" isReadOnly="true" association="_TO5DpMQWEeu_qNejKhSD1w">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_TOzkE8QWEeu_qNejKhSD1w" value="new JButton(&quot;Postfix to Prefix&quot;)"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_TO0LIcQWEeu_qNejKhSD1w" name="convert" visibility="private" isStatic="true" type="_TOFLUMQWEeu_qNejKhSD1w" association="_TO6RwMQWEeu_qNejKhSD1w">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_TO0LIsQWEeu_qNejKhSD1w" value="new Converter()"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_TO2nYMQWEeu_qNejKhSD1w" name="output" visibility="private" type="_TOtdccQWEeu_qNejKhSD1w" association="_TO640MQWEeu_qNejKhSD1w">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_TO3OccQWEeu_qNejKhSD1w" value="new JTextField(&quot;&quot;, 20)"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TO2AUMQWEeu_qNejKhSD1w" name="GUIConverter" specification="_TOI1sMQWEeu_qNejKhSD1w">
        <ownedParameter xmi:id="_TO2AUcQWEeu_qNejKhSD1w" type="_TOIOoMQWEeu_qNejKhSD1w" direction="return"/>
        <language>java</language>
        <body>super(&quot;Expression Evaluator&quot;);&#xD;
		setSize(400, 150);&#xD;
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
	&#xD;
		//Layout changed to handle 2 JButtons&#xD;
		setLayout(new GridLayout(3, 2));&#xD;
		JComponent[] inputComponents = {new JLabel(&quot;Enter Expression&quot;),&#xD;
		userInput};&#xD;
		makeFlowPanel(inputComponents);&#xD;
		JComponent[] buttonComponents = {prefix, postfix};&#xD;
		makeFlowPanel(buttonComponents);&#xD;
		JComponent[] outputComponents = {new JLabel(&quot;Result&quot;), output};&#xD;
		makeFlowPanel(outputComponents);	&#xD;
		output.setEditable(false);&#xD;
		prefix.addActionListener(new ActionListener() {&#xD;
			@Override&#xD;
			public void actionPerformed(ActionEvent event) {&#xD;
				try {&#xD;
				output.setText(convert.prefixToPostfix(userInput.getText()));&#xD;
				}&#xD;
				catch (java.util.EmptyStackException e){&#xD;
					JFrame err1 = new JFrame();&#xD;
					JOptionPane.showMessageDialog(err1, &quot;Did you mean to click Prefix to Postfix?&quot;,&quot;Invalid Operation&quot;,JOptionPane.WARNING_MESSAGE);&#xD;
				} catch (StackFull e) {&#xD;
					JFrame err2 = new JFrame();&#xD;
					JOptionPane.showMessageDialog(err2,&quot;Check equation for accuracy&quot;,&quot;Incorrect Format&quot;,JOptionPane.WARNING_MESSAGE);&#xD;
				} catch (Exception e) {&#xD;
					JFrame err3 = new JFrame();&#xD;
					JOptionPane.showMessageDialog(err3, e,&quot;System Generated&quot;,JOptionPane.WARNING_MESSAGE);&#xD;
				}&#xD;
				&#xD;
			}	&#xD;
		});&#xD;
		postfix.addActionListener(new ActionListener() {&#xD;
			@Override&#xD;
			public void actionPerformed(ActionEvent event) {&#xD;
				try {&#xD;
				output.setText(convert.postfixToPrefix(userInput.getText()));&#xD;
				}&#xD;
				catch(java.util.EmptyStackException e) {&#xD;
						JFrame err1 = new JFrame();&#xD;
						JOptionPane.showMessageDialog(err1, &quot;Did you mean to click Postfix to Prefix?&quot;,&quot;Invalid Operation&quot;,JOptionPane.WARNING_MESSAGE);&#xD;
				}&#xD;
				catch(StackFull e) {&#xD;
						JFrame err2 = new JFrame();&#xD;
						JOptionPane.showMessageDialog(err2,&quot;Check equation for accuracy&quot;,&quot;Incorrect Format&quot;,JOptionPane.WARNING_MESSAGE);&#xD;
				}&#xD;
					&#xD;
				}&#xD;
			});&#xD;
				&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TO2AUsQWEeu_qNejKhSD1w" name="makeFlowPanel" specification="_TOv5scQWEeu_qNejKhSD1w">
        <ownedParameter xmi:id="_TO2AU8QWEeu_qNejKhSD1w" name="components" type="_TOvSoMQWEeu_qNejKhSD1w">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_TO2AVMQWEeu_qNejKhSD1w" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>JPanel panel = new JPanel();&#xD;
		panel.setLayout(new FlowLayout());&#xD;
		for (Component component: components)&#xD;
			panel.add(component);&#xD;
		add(panel);&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_TO2AVcQWEeu_qNejKhSD1w" name="main" specification="_TOJcw8QWEeu_qNejKhSD1w">
        <ownedParameter xmi:id="_TO2AVsQWEeu_qNejKhSD1w" name="args">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_TO2AV8QWEeu_qNejKhSD1w" value="*"/>
        </ownedParameter>
        <language>java</language>
        <body>GUIConverter frame = new GUIConverter();&#xD;
		frame.setVisible(true);&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_TOI1sMQWEeu_qNejKhSD1w" name="GUIConverter" method="_TO2AUMQWEeu_qNejKhSD1w">
        <eAnnotations xmi:id="_TOJcwMQWEeu_qNejKhSD1w" source="http://www.eclipse.org/uml2/2.0.0/UML">
          <details xmi:id="_TOJcwcQWEeu_qNejKhSD1w" key="create"/>
        </eAnnotations>
        <ownedParameter xmi:id="_TOJcwsQWEeu_qNejKhSD1w" type="_TOIOoMQWEeu_qNejKhSD1w" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="_TOJcw8QWEeu_qNejKhSD1w" name="main" isStatic="true" method="_TO2AVcQWEeu_qNejKhSD1w">
        <ownedParameter xmi:id="_TOKD0MQWEeu_qNejKhSD1w" name="args">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_TOKD0cQWEeu_qNejKhSD1w" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_TOv5scQWEeu_qNejKhSD1w" name="makeFlowPanel" visibility="private" method="_TO2AUsQWEeu_qNejKhSD1w">
        <ownedParameter xmi:id="_TOv5ssQWEeu_qNejKhSD1w" name="components" type="_TOvSoMQWEeu_qNejKhSD1w">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_TOv5s8QWEeu_qNejKhSD1w" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_TOL5AMQWEeu_qNejKhSD1w" name="StackFull">
      <ownedComment xmi:id="_TO3OcsQWEeu_qNejKhSD1w">
        <body>Corey Hodges&#xD;
Project 1&#xD;
31 May 2021&#xD;
StackFull Runtime Exception&#xD;
 *</body>
      </ownedComment>
      <generalization xmi:id="_TOxu4MQWEeu_qNejKhSD1w" general="_TOxH0MQWEeu_qNejKhSD1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_TO4ckMQWEeu_qNejKhSD1w" name="" memberEnd="_TO4ckcQWEeu_qNejKhSD1w _TOxu4cQWEeu_qNejKhSD1w">
      <ownedEnd xmi:id="_TO4ckcQWEeu_qNejKhSD1w" name="" type="_TOIOoMQWEeu_qNejKhSD1w" association="_TO4ckMQWEeu_qNejKhSD1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_TO5DocQWEeu_qNejKhSD1w" name="" memberEnd="_TO5DosQWEeu_qNejKhSD1w _TOy9AcQWEeu_qNejKhSD1w">
      <ownedEnd xmi:id="_TO5DosQWEeu_qNejKhSD1w" name="" type="_TOIOoMQWEeu_qNejKhSD1w" association="_TO5DocQWEeu_qNejKhSD1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_TO5DpMQWEeu_qNejKhSD1w" name="" memberEnd="_TO5DpcQWEeu_qNejKhSD1w _TOzkEsQWEeu_qNejKhSD1w">
      <ownedEnd xmi:id="_TO5DpcQWEeu_qNejKhSD1w" name="" type="_TOIOoMQWEeu_qNejKhSD1w" association="_TO5DpMQWEeu_qNejKhSD1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_TO6RwMQWEeu_qNejKhSD1w" name="" memberEnd="_TO6RwcQWEeu_qNejKhSD1w _TO0LIcQWEeu_qNejKhSD1w">
      <ownedEnd xmi:id="_TO6RwcQWEeu_qNejKhSD1w" name="" type="_TOIOoMQWEeu_qNejKhSD1w" association="_TO6RwMQWEeu_qNejKhSD1w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_TO640MQWEeu_qNejKhSD1w" name="" memberEnd="_TO640cQWEeu_qNejKhSD1w _TO2nYMQWEeu_qNejKhSD1w">
      <ownedEnd xmi:id="_TO640cQWEeu_qNejKhSD1w" name="" type="_TOIOoMQWEeu_qNejKhSD1w" association="_TO640MQWEeu_qNejKhSD1w"/>
    </packagedElement>
    <profileApplication xmi:id="_TI9awMQWEeu_qNejKhSD1w">
      <eAnnotations xmi:id="_TI9awcQWEeu_qNejKhSD1w" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_TI-B0MQWEeu_qNejKhSD1w" base_Package="_TEKaUMQWEeu_qNejKhSD1w">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Reference xmi:id="_TOqaIMQWEeu_qNejKhSD1w" base_Element="_TOpzEcQWEeu_qNejKhSD1w"/>
  <UMLLabProfile:Reference xmi:id="_TOtdcMQWEeu_qNejKhSD1w" base_Element="_TOs2YMQWEeu_qNejKhSD1w"/>
  <UMLLabProfile:Reference xmi:id="_TOuEgMQWEeu_qNejKhSD1w" base_Element="_TOtdccQWEeu_qNejKhSD1w"/>
  <UMLLabProfile:Reference xmi:id="_TOurkMQWEeu_qNejKhSD1w" base_Element="_TOuEgcQWEeu_qNejKhSD1w"/>
  <UMLLabProfile:Reference xmi:id="_TOv5sMQWEeu_qNejKhSD1w" base_Element="_TOvSoMQWEeu_qNejKhSD1w"/>
  <UMLLabProfile:Reference xmi:id="_TOxH0cQWEeu_qNejKhSD1w" base_Element="_TOxH0MQWEeu_qNejKhSD1w"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_TOyV8cQWEeu_qNejKhSD1w" base_Property="_TOxu4cQWEeu_qNejKhSD1w" siblings="_TO2nYMQWEeu_qNejKhSD1w" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TOy9AMQWEeu_qNejKhSD1w" base_Element="_TOxu4cQWEeu_qNejKhSD1w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TOzkEcQWEeu_qNejKhSD1w" base_Element="_TOy9AcQWEeu_qNejKhSD1w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TO0LIMQWEeu_qNejKhSD1w" base_Element="_TOzkEsQWEeu_qNejKhSD1w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TO0LI8QWEeu_qNejKhSD1w" base_Element="_TO0LIcQWEeu_qNejKhSD1w"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_TO2nYcQWEeu_qNejKhSD1w" base_Property="_TO2nYMQWEeu_qNejKhSD1w"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_TO3OcMQWEeu_qNejKhSD1w" base_Element="_TO2nYMQWEeu_qNejKhSD1w"/>
  <UMLLabProfile:Reference xmi:id="_TO5DoMQWEeu_qNejKhSD1w" base_Element="_TO4ckMQWEeu_qNejKhSD1w"/>
  <UMLLabProfile:Reference xmi:id="_TO5Do8QWEeu_qNejKhSD1w" base_Element="_TO5DocQWEeu_qNejKhSD1w"/>
  <UMLLabProfile:Reference xmi:id="_TO5DpsQWEeu_qNejKhSD1w" base_Element="_TO5DpMQWEeu_qNejKhSD1w"/>
  <UMLLabProfile:Reference xmi:id="_TO6RwsQWEeu_qNejKhSD1w" base_Element="_TO6RwMQWEeu_qNejKhSD1w"/>
  <UMLLabProfile:Reference xmi:id="_TO640sQWEeu_qNejKhSD1w" base_Element="_TO640MQWEeu_qNejKhSD1w"/>
</xmi:XMI>
